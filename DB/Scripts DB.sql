TABLAS PARA EL SISTEMA HELP DESK

-Empleado
-Departamentos
-Tipo Incidencia(id, tipo)
-Casos
-Estado caso
-Repuestos 
-Historial Caso
-Productos Software
-Login
-Puesto de trabajo
-Encuesta de satisfacción
-Solicitud de repuestos
-Notificaciones 
-Prioridad

-----------------------------------SCRIPTS---------------------------------------

-------------------------------------------------
-- TABLAS PRINCIPALES
-------------------------------------------------

-- 1. Departamentos
CREATE TABLE Departamentos (
    id_departamento NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL,
    descripcion VARCHAR2(255)
);

-- 2. Estado_Caso
CREATE TABLE Estado_Caso (
    id_estado NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(50) NOT NULL
);

-- 3. Prioridad
CREATE TABLE Prioridad (
    id_prioridad NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(50) NOT NULL
);

-- 4. Tipo_Incidencia
CREATE TABLE Tipo_Incidencia (
    id_tipo NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tipo VARCHAR2(100) NOT NULL
);

-- 5. Empleado
CREATE TABLE Empleado (
    id_empleado NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_departamento NUMBER NOT NULL,
    nombre VARCHAR2(100) NOT NULL,
    apellido VARCHAR2(100) NOT NULL,
    correo VARCHAR2(150) UNIQUE NOT NULL,
    telefono VARCHAR2(20),
    rol VARCHAR2(50) CHECK (rol IN ('USUARIO','AGENTE','SUPERVISOR','ADMIN')),
    activo CHAR(1) DEFAULT 'S' CHECK (activo IN ('S','N')),
    CONSTRAINT fk_empleado_departamento FOREIGN KEY (id_departamento) REFERENCES Departamentos(id_departamento)
);

-- 6. Usuarios (login)
CREATE TABLE Usuarios (
    id_usuario NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_empleado NUMBER NOT NULL UNIQUE,
    username VARCHAR2(50) UNIQUE NOT NULL,
    password VARCHAR2(200) NOT NULL,
    ultimo_login TIMESTAMP,
    CONSTRAINT fk_usuario_empleado FOREIGN KEY (id_empleado) REFERENCES Empleado(id_empleado)
);

-- 7. Casos
CREATE TABLE Casos (
    id_caso NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_empleado_solicita NUMBER NOT NULL,
    id_tipo_incidencia NUMBER NOT NULL,
    titulo VARCHAR2(200) NOT NULL,
    descripcion CLOB NOT NULL,
    id_prioridad NUMBER,
    fecha_creacion TIMESTAMP DEFAULT SYSTIMESTAMP,
    fecha_cierre TIMESTAMP,
    tiempo_resolucion INTERVAL DAY TO SECOND,
    id_estado_actual NUMBER REFERENCES Estado_Caso(id_estado),
    CONSTRAINT fk_caso_empleado FOREIGN KEY (id_empleado_solicita) REFERENCES Empleado(id_empleado),
    CONSTRAINT fk_caso_tipo FOREIGN KEY (id_tipo_incidencia) REFERENCES Tipo_Incidencia(id_tipo),
    CONSTRAINT fk_caso_prioridad FOREIGN KEY (id_prioridad) REFERENCES Prioridad(id_prioridad)
);

-- 8. Repuestos
CREATE TABLE Repuestos (
    id_repuesto NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL,
    descripcion VARCHAR2(255),
    stock NUMBER DEFAULT 0 CHECK (stock >= 0),
    precio_unitario NUMBER(10,2) CHECK (precio_unitario >= 0)
);

-- 9. Historial_Caso
CREATE TABLE Historial_Caso (
    id_historial NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_caso NUMBER REFERENCES Casos(id_caso),
    fecha DATE DEFAULT SYSDATE,
    comentario CLOB,
    id_estado NUMBER REFERENCES Estado_Caso(id_estado),
    id_empleado NUMBER REFERENCES Empleado(id_empleado)
);

-- 10. Solicitud_Repuestos
CREATE TABLE Solicitud_Repuestos (
    id_caso NUMBER REFERENCES Casos(id_caso),
    id_repuesto NUMBER REFERENCES Repuestos(id_repuesto),
    cantidad NUMBER DEFAULT 1 CHECK (cantidad > 0),
    PRIMARY KEY (id_caso, id_repuesto)
);

-- 11. Encuesta_Satisfaccion
CREATE TABLE Encuesta_Satisfaccion (
    id_encuesta NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_caso NUMBER REFERENCES Casos(id_caso),
    calificacion NUMBER CHECK (calificacion BETWEEN 1 AND 5),
    comentario VARCHAR2(500),
    fecha_respuesta TIMESTAMP DEFAULT SYSTIMESTAMP
);

-- 12. Notificaciones
CREATE TABLE Notificaciones (
    id_notificacion NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_caso NUMBER REFERENCES Casos(id_caso),
    id_empleado NUMBER REFERENCES Empleado(id_empleado),
    mensaje VARCHAR2(255),
    estado VARCHAR2(50) CHECK (estado IN ('Encolado','Enviado','Visto'))
);

-------------------------------------------------
-- TRIGGERS
-------------------------------------------------

-- Trigger para calcular fecha_cierre y tiempo_resolucion
CREATE OR REPLACE TRIGGER trg_calcular_resolucion
AFTER INSERT OR UPDATE ON Historial_Caso
FOR EACH ROW
DECLARE
    v_estado_cerrado NUMBER;
BEGIN
    SELECT id_estado INTO v_estado_cerrado 
    FROM Estado_Caso 
    WHERE nombre = 'Cerrado';

    IF :NEW.id_estado = v_estado_cerrado THEN
        UPDATE Casos
        SET fecha_cierre = SYSTIMESTAMP,
            tiempo_resolucion = SYSTIMESTAMP - fecha_creacion
        WHERE id_caso = :NEW.id_caso;
    END IF;
END;
/

-- Trigger para mantener actualizado el estado actual del caso
CREATE OR REPLACE TRIGGER trg_actualizar_estado_caso
AFTER INSERT OR UPDATE ON Historial_Caso
FOR EACH ROW
BEGIN
    MERGE INTO Casos c
    USING (
        SELECT h.id_caso, h.id_estado
        FROM Historial_Caso h
        WHERE h.id_historial = (
            SELECT MAX(id_historial)
            FROM Historial_Caso
            WHERE id_caso = h.id_caso
        )
    ) h
    ON (c.id_caso = h.id_caso)
    WHEN MATCHED THEN
        UPDATE SET c.id_estado_actual = h.id_estado;
END;
/

-------------------------------------------------
-- INSERTS INICIALES
-------------------------------------------------

-- Departamentos
INSERT INTO Departamentos (nombre, descripcion) VALUES ('Soporte Técnico', 'Departamento de soporte técnico');
INSERT INTO Departamentos (nombre, descripcion) VALUES ('Sistemas', 'Departamento de sistemas y TI');

-- Estado_Caso
INSERT INTO Estado_Caso (nombre) VALUES ('Asignado');
INSERT INTO Estado_Caso (nombre) VALUES ('En Proceso');
INSERT INTO Estado_Caso (nombre) VALUES ('Cerrado');
INSERT INTO Estado_Caso (nombre) VALUES ('Rechazado');

-- Prioridad
INSERT INTO Prioridad (nombre) VALUES ('Alta');
INSERT INTO Prioridad (nombre) VALUES ('Media');
INSERT INTO Prioridad (nombre) VALUES ('Baja');

-- Tipo_Incidencia
INSERT INTO Tipo_Incidencia (tipo) VALUES ('Impresora no funciona');
INSERT INTO Tipo_Incidencia (tipo) VALUES ('Pantalla congelada');
INSERT INTO Tipo_Incidencia (tipo) VALUES ('Otro');

-- Empleados
INSERT INTO Empleado (id_departamento, nombre, apellido, correo, telefono, rol, activo)
VALUES (1, 'Juan', 'Pérez', 'juan.perez@empresa.com', '555-1234', 'AGENTE', 'S');

INSERT INTO Empleado (id_departamento, nombre, apellido, correo, telefono, rol, activo)
VALUES (2, 'Ana', 'Gómez', 'ana.gomez@empresa.com', '555-5678', 'USUARIO', 'S');

-- Usuarios (login)
INSERT INTO Usuarios (id_empleado, username, password)
VALUES (1, 'juanp', '12345');

INSERT INTO Usuarios (id_empleado, username, password)
VALUES (2, 'anag', '12345');

-- Casos
INSERT INTO Casos (id_empleado_solicita, id_tipo_incidencia, titulo, descripcion, id_prioridad)
VALUES (2, 1, 'Impresora bloqueada', 'La impresora del área de finanzas no imprime', 1);

INSERT INTO Casos (id_empleado_solicita, id_tipo_incidencia, titulo, descripcion, id_prioridad)
VALUES (2, 2, 'Pantalla congelada', 'La pantalla de mi PC se queda congelada frecuentemente', 2);

-- Repuestos
INSERT INTO Repuestos (nombre, descripcion, stock, precio_unitario)
VALUES ('Toner HP', 'Toner para impresora HP', 10, 75.50);

INSERT INTO Repuestos (nombre, descripcion, stock, precio_unitario)
VALUES ('Cable HDMI', 'Cable HDMI 2 metros', 20, 15.00);

-- Historial_Caso
INSERT INTO Historial_Caso (id_caso, comentario, id_estado, id_empleado)
VALUES (1, 'Caso recibido y asignado al técnico', 1, 1);

INSERT INTO Historial_Caso (id_caso, comentario, id_estado, id_empleado)
VALUES (2, 'Se revisa el equipo y se reinicia el sistema', 2, 1);

-- Cerramos caso 1 para probar trigger
INSERT INTO Historial_Caso (id_caso, comentario, id_estado, id_empleado)
VALUES (1, 'Problema resuelto, se cierra el caso', 3, 1);

-- Solicitud_Repuestos
INSERT INTO Solicitud_Repuestos (id_caso, id_repuesto, cantidad) VALUES (1, 1, 1);
INSERT INTO Solicitud_Repuestos (id_caso, id_repuesto, cantidad) VALUES (2, 2, 1);

-- Encuesta_Satisfaccion
INSERT INTO Encuesta_Satisfaccion (id_caso, calificacion, comentario) VALUES (1, 5, 'Servicio rápido y eficiente');
INSERT INTO Encuesta_Satisfaccion (id_caso, calificacion, comentario) VALUES (2, 4, 'Solución efectiva, pero tardó un poco');

-- Notificaciones
INSERT INTO Notificaciones (id_caso, id_empleado, mensaje, estado)
VALUES (1, 1, 'Se asignó técnico al caso', 'Enviado');

INSERT INTO Notificaciones (id_caso, id_empleado, mensaje, estado)
VALUES (2, 1, 'Caso en revisión por soporte', 'Encolado');
